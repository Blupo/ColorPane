{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ColorPane","text":"<p>ColorPane is a suite of color tools for designing Roblox projects. Included in this plugin are:</p> <ul> <li>A color editor with a color wheel, several types of sliders, and various color palettes, with the ability to create, import, and export your own palettes.</li> <li>A gradient editor, similar to the Studio editor, with some quality-of-life changes including keypoint snapping, buttons to swap keypoint colors around, and a gradient palette.</li> <li>A Color Properties panel, which lets you use the color picker and gradient editor to edit the properties of parts, UIs, or other objects in your projects.</li> </ul> <p>ColorPane also has an API that allows you to use these tools in your own plugins so that you don't have to create them yourself.</p>"},{"location":"#installing","title":"Installing","text":"<p>ColorPane is available in the plugin library here. You can also grab a release from GitHub and install it manually.</p> <p>If you know how to use Rojo, you can build the latest code from the <code>develop</code> branch to get the newest features. Keep in mind that this is development code, and things can break or change quickly.</p>"},{"location":"attribution/","title":"Attribution","text":""},{"location":"attribution/#colorbrewer","title":"ColorBrewer","text":"<p>This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).</p> <pre><code>Apache-Style Software License for ColorBrewer software and ColorBrewer Color\nSchemes\n\nCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The Pennsylvania State\nUniversity.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not\nuse this file except in compliance with the License. You may obtain a copy of\nthe License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations under\nthe License.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions as source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. The end-user documentation included with the redistribution, if any, must\ninclude the following acknowledgment: \"This product includes color\nspecifications and designs developed by Cynthia Brewer\n(http://colorbrewer.org/).\" Alternately, this acknowledgment may appear in the\nsoftware itself, if and wherever such third-party acknowledgments normally\nappear.\n\n4. The name \"ColorBrewer\" must not be used to endorse or promote products\nderived from this software without prior written permission. For written\npermission, please contact Cynthia Brewer at cbrewer@psu.edu.\n\n5. Products derived from this software may not be called \"ColorBrewer\", nor\nmay \"ColorBrewer\" appear in their name, without prior written permission of\nCynthia Brewer.\n</code></pre>"},{"location":"attribution/#copic","title":"Copic","text":"<p>Copic is a registered trademark of Too Corporation, Japan.</p>"},{"location":"attribution/#neilbartlettcolor-temperature","title":"@neilbartlett/color-temperature","text":"<p>The implementation of the Kelvin color module is based on Neil Bartlett's color-temperature, which is licensed under the MIT License.</p>"},{"location":"attribution/#material-icons","title":"Material Icons","text":"<p>ColorPane makes extensive use of Google's Material Icons, which are licensed under the Apache License 2.0.</p>"},{"location":"attribution/#robloxroact-rodux-roact-rodux","title":"@roblox/roact, rodux, roact-rodux","text":"<p>@roblox's roact, rodux, and roact-rodux are included in ColorPane. They are licensed under the Apache License 2.0.</p>"},{"location":"attribution/#evaeraroblox-lua-promise","title":"@evaera/roblox-lua-promise","text":"<p>@evaera's roblox-lua-promise is included in ColorPane. It is licensed under the MIT License.</p>"},{"location":"attribution/#osyrisrblxt","title":"@osyrisrblx/t","text":"<p>@osyrisrblx's t is included in ColorPane. It is licensed under the MIT License.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#041-2022-09-30","title":"[0.4.1] - 2022-09-30","text":""},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Fixed a bug where the HSL saturation and lightness sliders would only show a red hue (this is purely a visual bug and did not affect color selection)</li> </ul>"},{"location":"changelog/#040-2022-04-19","title":"[0.4.0] - 2022-04-19","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Added <code>API.GetVersion</code> which allows external applications to check which version of the plugin is installed</li> <li>Added <code>API.PromptForGradient</code> as a replacement for <code>API.PromptForColorSequence</code>, which can prompt for either Gradients or ColorSequences</li> <li>Added color interpolation controls and ColorSequence code exporting to the Gradient Editor</li> <li>Added the Color Tools section where the Color Info page used to be</li> <li>Added HWB, Lab, Luv, LCh(ab/uv), xyY, and XYZ to Color Info</li> <li>A first-time use prompt will now appear informing the user that script injection is required for exporting palettes to ModuleScripts and the API</li> <li>Added a warning in the export dialog that script injection is required for exporting palettes to ModuleScripts</li> <li>Added a color sorter that uses CIEDE2000 in the Color Tools section</li> <li>Added a Picular palette (idea from csqrl's Picular plugin)</li> <li>Added a Gradient picker tool which allows users to pick colors from their gradients</li> <li>Color Properties now shows the color type of the each property</li> <li>Right-clicking on a property in Color Properties now shows a menu to view the property documentation</li> <li>Mouse drag inputs now work outside of editor windows</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li><code>API.PromptForColor</code> now allows for prompting either Colors or Color3s</li> <li>Improved keypoint dragging behaviour in the Gradient Editor</li> <li>Improved performance (probably)</li> <li><code>API.PromptForColor</code> and <code>API.PromptForGradient</code> now reject with PromptErrors instead of message strings</li> <li>Checking for updates now gracefully handles errors</li> <li>Checking for updates no longer does excess work if an update notice has already been shown</li> <li>Changed the message when notifying the user that a new version is available</li> <li>Moved the Color Variations palette to the Color Tools section</li> <li>API injection is now automatically done at startup</li> <li>Releases now contain binary (rbxm) files, so file size is reduced</li> <li>Terrain material color properties were renamed to \"[Material] Material\" (e.g. \"Asphalt Material\") from \"[Material] Color\" (e.g. \"Asphalt Color\")</li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Exporting palettes now lists color components correctly (components were listed in the order RBG instead of RGB)</li> <li>Changing palettes now deselects the selected color</li> <li>Changing palettes in the export dialog now correctly persists the export type</li> <li>Scrollbars no longer interfere with mouse drag inputs</li> </ul>"},{"location":"changelog/#deprecated","title":"Deprecated","text":"<ul> <li><code>API.PromptForColorSequence</code> has been deprecated, please use <code>API.PromptForGradient</code> for new work</li> <li><code>API.IsColorSequenceEditorOpen</code> has been deprecated, please use <code>API.IsGradientEditorOpen</code> for new work</li> </ul>"},{"location":"changelog/#removed","title":"Removed","text":"<ul> <li>The \"Preview color changes before applying them when using Color Properties\" setting was removed</li> </ul>"},{"location":"changelog/#031-2021-12-09","title":"[0.3.1] - 2021-12-09","text":""},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Fixed a bug where trying to use the scroll wheel on a dropdown selector (e.g. slider or palette pickers) resulted in a blank page</li> </ul>"},{"location":"changelog/#030-2021-07-21","title":"[0.3.0] - 2021-07-21","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Added the ability to import palettes from ModuleScripts, StringValues, JSON files, or URLs</li> <li>Added the ability to export palettes as ModuleScripts or StringValues</li> <li>Users will now be notified at startup if their version of ColorPane is out-of-date, with the option to disable this in the Settings</li> <li>Added a palette showing variations of the selected color, including hues, shades, tints, and tones</li> <li>Added a Copic color palette</li> <li>Holding down either Shift key when selecting the option to delete a palette will now bypass the confirmation dialog</li> <li>Users can now use the arrow keys to traverse palettes when a color is selected, as well as switch between keypoints in the ColorSequence editor when one is selected</li> <li>Setting data will now automatically save instead of only when the plugin is unloaded or when the Settings window is closed, with options to disable this or modify the interval in the Settings</li> <li>Users now have the option to cache the Roblox API data so that Color Properties can be used during testing or offline with the \"Cache Roblox API data\" setting</li> <li>Added a gradient palette</li> <li>Added a toolbar button to summon the Gradient Editor</li> <li>Added a setting to toggle previewing color changes before applying them when using Color Properties</li> </ul>"},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>Fixed a bug that occurred when the API script was modified while the API wasn't loaded</li> <li>Fixed a bug where trying to use the scroll wheel on the palette page picker would break the palettes page if the user didn't have any User Palettes</li> <li>Fixed a bug that occurred if Color Properties tried referencing an object property that existed in the API dump but didn't exist on the object, most likely because the Studio and API dump versions were mismatched</li> <li>Fixed a bug that occurred when a text input was focused and destroyed due to a re-render</li> </ul>"},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>Testing sessions (e.g. Play Solo) can no longer modify settings or write data to disk</li> <li>Changed the behaviour for data writing when multiple Studio sessions are open</li> <li>Modified some setting descriptions to more accurately reflect what they actually do</li> <li>Changed the \"Load API\" toolbar button's text and description to more accurately reflect what it actually does</li> <li>Color Properties now shows a notice if the selection has no color properties instead of showing a blank window</li> <li>Several text inputs, mainly for color components, will now select their entire text when you focus on them</li> <li>Palette search will now update as the search text changes and no longer requires the user to release the TextBox's focus</li> <li>Text inputs will now respond to overflow text and changes to the cursor position</li> <li>When adding a new color to a palette, the search query will reset and the new color will be selected</li> <li>Changed the icons for the Color and Gradient Editor toolbar buttons</li> <li>Differentiated the icon denoting a removal from a subtraction</li> <li>Removed the 99 quick palette color limit</li> <li>Settings will now visually indicate to the user if saving is disabled</li> </ul>"},{"location":"changelog/#021-2021-03-29","title":"[0.2.1] - 2021-03-29","text":""},{"location":"changelog/#fixed_4","title":"Fixed","text":"<ul> <li>The Color Properties window no longer tries to load in testing modes</li> <li>The Color Properties window will now show the loading screen if it is enabled on startup instead of being blank</li> </ul>"},{"location":"changelog/#020-2021-03-29","title":"[0.2.0] - 2021-03-29","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Added a Settings window</li> <li>Integrated the functionality of ColorProps into ColorPane, with the option to automatically load the window at startup in the Settings</li> <li>You can now view palettes in either a grid or list layout</li> <li>Added a palette of web colors</li> <li>Added sections to the palette list to distinguish between built-in and user-created palettes</li> <li>Added an editor page that lets you copy/paste between different color types</li> </ul>"},{"location":"changelog/#changed_2","title":"Changed","text":"<ul> <li>API loading is no longer occurs at startup by default, the user must now explicitly load it or set the option to automatically load it in the Settings</li> <li>Color Properties: You can now click anywhere inside a property list item to edit the color, not just on the item's color indicator</li> <li>Changed the behaviour of the palette grid double-click shortcut: clicking on the color at any time after it has been selected will set the current color, not just within the amount of time that would be considered a \"double click\"</li> <li>When searching for a palette color, if the selected color is included in the filtered list, it will now stay selected instead of being deselected</li> <li>You will now be asked to input a name before creating new palettes, with the option to disable this in the Settings</li> <li>The palette naming prompt will now show you what the actual new name will be if the inputted name is already being used</li> </ul>"},{"location":"changelog/#fixed_5","title":"Fixed","text":"<ul> <li>The titles of the editor windows now reset to an identifiable name once they are closed</li> <li>Setting the initial prompt value when calling <code>PromptForColor</code> no longer causes <code>OnColorChanged</code> to be called</li> <li>Improved the performance of multiple components, the effects of which will be particularly noticable when resizing editor windows or using the palettes page</li> <li>The editor page bar in the color editor window now correctly highlights the currently-chosen editor page</li> <li>Editor pages in the color editor now have the proper minimum width, previously the calculations did not take padding into account and ended up making them slightly smaller than the minimum</li> <li>Fixed improper behaviour in the color wheel due to some misplaced code: the color value should have updated when the left mouse button was pressed down on the saturation-brightness square, however it occurred when the mouse button was released instead</li> <li>If you close the Color Properties window while editing a property, the color editor window(s) should now close</li> </ul>"},{"location":"changelog/#removed_1","title":"Removed","text":"<ul> <li>Removed the undocumented <code>OpenColorEditor</code> function from the API</li> <li>Removed the name restrictions on user-created palettes</li> </ul>"},{"location":"changelog/#012-2021-03-10","title":"[0.1.2] - 2021-03-10","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>Added a toolbar button that lets the user attempt to drop the API script into CoreGui if it could not be done automatically</li> <li>Added toolbar button icons</li> <li>Added a warning when modifying the API script's Source</li> </ul>"},{"location":"changelog/#changed_3","title":"Changed","text":"<ul> <li>Updated and fixed some documentation</li> <li>Changed the name of the color editor toolbar button to \"Color Editor\" (from just \"Editor\")</li> </ul>"},{"location":"changelog/#removed_2","title":"Removed","text":"<ul> <li>Removed the undocumented <code>OpenColorSequenceEditor</code> function from the API (<code>OpenColorEditor</code> will be removed in future update)</li> </ul>"},{"location":"changelog/#011-2021-03-09","title":"[0.1.1] - 2021-03-09","text":""},{"location":"changelog/#changed_4","title":"Changed","text":"<ul> <li>Now gracefully handles script injection</li> </ul>"},{"location":"changelog/#010-2021-03-09","title":"[0.1.0] - 2021-03-09","text":""},{"location":"changelog/#added_4","title":"Added","text":"<ul> <li>ColorPane first release</li> </ul>"},{"location":"support/","title":"Support ColorPane","text":""},{"location":"support/#contributing","title":"Contributing","text":""},{"location":"support/#relevant-links","title":"Relevant Links","text":"<ul> <li>GitHub, for opening issues and submitting pull requests</li> <li>DevForum thread, for sending reports</li> <li>BlupoV2's DevForum profile, for sending reports</li> </ul>"},{"location":"support/#bug-reports","title":"Bug Reports","text":"<p>Bugs should be submitted by sending a report or opening an issue. Please include a detailed description and an image and/or video of the bug to make it easier to track down.</p>"},{"location":"support/#documentation","title":"Documentation","text":"<p>If you find any errors or places for improvement in the documentation, feel free to send a report (preferably via private message), open an issue, or submit a pull request (<code>main</code> or <code>develop</code> is OK). ColorPane uses MkDocs with the Material theme for its documentation.</p>"},{"location":"support/#translations","title":"Translations","text":"<p>To reach as many developers as possible, one of ColorPane's goals is to be fully translated into several languages. If you would like to help translate ColorPane, you can contribute to the Crowdin project.</p>"},{"location":"support/#feature-requests","title":"Feature Requests","text":"<p>Features requests should be submitted by sending them (preferable a private message) or opening an issue. Feature requests should align with ColorPane's purpose of being a general-purpose suite of color tools. Please be as detailed as possible, and include images and/or video if necessary. New features should be fully discussed before contributing any code to avoid any wasted time and/or effort.</p>"},{"location":"support/#code-contributions","title":"Code Contributions","text":"<p>If you have code you would like to contribute to ColorPane, please submit a pull request. ColorPane uses Rojo 7 for project management. Please use <code>place.project.json</code> when working in Studio (<code>default.project.json</code> is used for building the plugin file). The plugin build folder will be located in ServerStorage.</p> <p>Please only submit new code to the <code>develop</code> branch.</p>"},{"location":"support/#donations","title":"Donations","text":"<p>ColorPane is and will remain a free-to-use, open-source project. Because of that, donations are greatly appreciated so that development can continue and new features can be added. If you want to support ColorPane by donating, you can use either:</p> <ul> <li>Patreon for recurring donations, or</li> <li>Ko-fi for one-time donations</li> </ul>"},{"location":"developer-guide/api-integration/","title":"API Integration","text":"<p>The ColorPane API allows plugin developers to use ColorPane in their projects in place of creating their own pickers.</p>"},{"location":"developer-guide/api-integration/#acquiring-the-api","title":"Acquiring the API","text":"<p>To use the API, you need to acquire the API script. If the user has the plugin installed (and has allowed script injection), the API script will be a ModuleScript present in CoreGui, named <code>ColorPane</code>.</p> <pre><code>local ColorPane = require(game:GetService(\"CoreGui\"):FindFirstChild(\"ColorPane\"))\n</code></pre> <p>You can also decide to wait for the API, although you should probably notify the user that the API isn't available and give them a button to look again instead.</p> <pre><code>local CoreGui = game:GetService(\"CoreGui\")\nlocal ColorPane\n\nlocal locateButton = ...\n\nlocal locateAPI = function()\n    if (ColorPane) then return end\n\n    local apiScript = CoreGui:FindFirstChild(\"ColorPane\")\n\n    if (not (apiScript and apiScript:IsA(\"ModuleScript\"))) then\n        warn(\"The ColorPane API was not found, please make sure you have the plugin installed and try again.\")\n    else\n        ColorPane = require(apiScript)\n    end\nend\n\nlocateButton.Activated:Connect(function()\n    if (ColorPane) then return end\n\n    locateAPI()\nend)\n</code></pre>"},{"location":"developer-guide/api-integration/#using-the-api","title":"Using the API","text":"<p>You can view the API reference for more information on the API examples in this page.</p>"},{"location":"developer-guide/api-integration/#getting-colors","title":"Getting Colors","text":"<p>You can obtain colors with the PromptForColor and PromptForGradient functions.</p> <p>Warning</p> <p>You must use the dot operator (<code>.</code>) when calling API functions (e.g. <code>ColorPane.PromptForColor</code> instead of <code>ColorPane:PromptForColor</code>). The API is not a class-like object.</p> <pre><code>local editPromise = ColorPane.PromptForColor({\n    PromptTitle = \"Hello, Roblox!\",\n\n    -- start the prompt with a random color\n    InitialColor = Color3.new(math.random(), math.random(), math.random()),\n\n    OnColorChanged = function(intermediateColor)\n        -- some cool stuff\n    end,\n})\n</code></pre> <pre><code>local editPromise = ColorPane.PromptForGradient({\n    PromptTitle = \"Hello, Roblox!\",\n\n    -- black to white gradient\n    InitialGradient = ColorSequence.new(Color3.new(0, 0, 0), Color3.new(1, 1, 1)),\n\n    OnGradientChanged = function(intermediateGradient)\n        -- some cool stuff\n    end,\n})\n</code></pre> <p>The prompt functions return Promises, which are used to encapsulate values that will exist in the future, but do not currently exist.</p> <pre><code>editPromise:andThen(function(newColor)\n    print(\"Got a new color: \" .. tostring(newColor))\nend, function(error)\n    warn(tostring(error))\nend):finally(function()\n    editPromise = nil\nend)\n\n-- the color is no longer relevant\neditPromise:cancel()\n</code></pre> <p>If you're not familiar with the Promise workflow, you can use <code>Promise.await</code> (or <code>Promise.awaitStatus</code>), which will yield until a value is returned, similar to the various <code>Async</code> functions in the engine.</p> <pre><code>local status, data = editPromise:awaitStatus()\n\nif (status == ColorPane.PromiseStatus.Resolved) then\n    print(\"Got a new color: \" .. tostring(data))\nelseif (status == ColorPane.PromiseStatus.Rejected) then\n    warn(tostring(data))\nend\n\neditPromise = nil\n</code></pre>"},{"location":"developer-guide/api-integration/#unloading","title":"Unloading","text":"<p>You should use the Unloading event to clean up anything that uses ColorPane. Any Promises created with the API will automatically be cancelled.</p> <pre><code>ColorPane.Unloading:Connect(function()\n    ColorPane = nil\nend)\n</code></pre>"},{"location":"developer-guide/api-integration/#advanced-prompts","title":"Advanced Prompts","text":"<p>For more refined controls over how colors are handled, you can specify prompt options. For <code>PromptForColor</code>, you can refer to <code>ColorPromptOptions</code>, but the only advanced option is specifying the type of color you receive (either a Color3 or a Color).</p> <p>For <code>PromptForGradient</code>, refer to <code>GradientPromptOptions</code>. You can specify the details of how the gradient is constructed, and the type of gradient you receive (either a ColorSequence or a Gradient).</p> <pre><code>ColorPane.PromptForGradient({\n    PromptTitle = \"Hello, Roblox!\",\n\n    InitialGradient = ColorSequence.new(\n        Color3.new(math.random(), math.random(), math.random()),\n        Color3.new(math.random(), math.random(), math.random())\n    ),\n\n    InitialColorSpace = \"XYZ\",\n    InitialPrecision = 2,\n})\n</code></pre>"},{"location":"developer-guide/integration-examples/","title":"Integration Examples","text":"<p>Some plugins have integrated ColorPane. If you would like your plugin to be listed on this page, send a message to BlupoV2 on the DevForum or open an issue on GitHub.</p>"},{"location":"developer-guide/integration-examples/#third-party-plugins","title":"Third-Party Plugins","text":"<ul> <li>Sweetheartichoke's Tag Editor plugin</li> </ul>"},{"location":"developer-guide/integration-examples/#example-plugins","title":"Example Plugins","text":"<ul> <li>Coming soon(tm)</li> </ul>"},{"location":"technical/api-reference/","title":"API Reference","text":"<p>Info</p> <p>The ColorPane API makes use of Promises, and you should review their documentation if necessary.</p>"},{"location":"technical/api-reference/#types","title":"Types","text":""},{"location":"technical/api-reference/#colorpromptoptions","title":"ColorPromptOptions","text":"<pre><code>{\n    PromptTitle: string?,\n    ColorType: (\"Color3\" | \"Color\")?,\n    InitialColor: (Color | Color3)?,\n    OnColorChanged: ((Color | Color3) -&gt; nil)?\n}\n</code></pre> <p>Currently, the type of <code>InitialColor</code> and the value of <code>ColorType</code> must match. This will be changed in a future update.</p> <ul> <li><code>OnColorChanged</code> must not yield.</li> </ul>"},{"location":"technical/api-reference/#colorsequencepromptoptions","title":"ColorSequencePromptOptions","text":"<pre><code>{\n    PromptTitle: string?,\n    InitialColor: ColorSequence?,\n    OnColorChanged: ((ColorSequence) -&gt; nil)?\n}\n</code></pre> <ul> <li><code>OnColorChanged</code> must not yield.</li> </ul>"},{"location":"technical/api-reference/#gradientpromptoptions","title":"GradientPromptOptions","text":"<pre><code>{\n    PromptTitle: string?,\n    GradientType: (\"ColorSequence\" | \"Gradient\")?,\n    InitialGradient: (Gradient | ColorSequence)?,\n    InitialColorSpace: string?,\n    InitialHueAdjustment: string?,\n    InitialPrecision: number?,\n    OnGradientChanged: ((Gradient | ColorSequence) -&gt; nil)?\n}\n</code></pre> <p>Currently, the type of <code>InitialGradient</code> and the value of <code>GradientType</code> must match. This will be changed in a future update.</p> <ul> <li><code>OnGradientChanged</code> must not yield.</li> <li><code>InitialColorSpace</code> refers to the one of the color spaces used by Color.mix.</li> <li><code>InitialHueAdjustment</code> refers to the one of the hue adjustments used by Color.mix.</li> <li><code>InitialPrecision</code> refers to the \"precision\" of the gradient, or how visually-accurate you want it to be. This currently ranges from 0-18, but the maximum precision depends on the number of keypoints in the gradient.<ul> <li>Specifically, the maximum precision for <code>k</code> keypoints, with maximum <code>km</code> keypoints (currently 20) is <code>math.floor((km - 1) / (k - 1)) - 1</code></li> </ul> </li> </ul>"},{"location":"technical/api-reference/#prompterror","title":"PromptError","text":"<pre><code>{\n    InvalidPromptOptions: \"InvalidPrompt\",\n    PromptAlreadyOpen: \"PromptAlreadyOpen\",\n    ReservationProblem: \"ReservationProblem\"\n}\n</code></pre>"},{"location":"technical/api-reference/#properties","title":"Properties","text":""},{"location":"technical/api-reference/#colorpaneprompterror","title":"ColorPane.PromptError","text":"<pre><code>ColorPane.PromptError: PromptError\n</code></pre> <p>If a prompt cannot be opened, a PromptError will be the value passed through the Promise. It has the following items:</p> <ul> <li><code>InvalidPromptOptions</code>, if the options passed to the prompt function are invalid (e.g. trying to pass a Color3 value to the <code>InitialGradient</code> key of GradientPromptOptions).</li> <li><code>PromptAlreadyOpen</code>, which should be self-explanatory.</li> <li><code>ReservationProblem</code>, if you either try to prompt for a color and the gradient editor is already open, or you try to prompt for a gradient and the color editor is already open.</li> </ul>"},{"location":"technical/api-reference/#colorpanepromisestatus","title":"ColorPane.PromiseStatus","text":"<pre><code>ColorPane.PromiseStatus: Status\n</code></pre> <p>Refers to the Status enum of the Promise library.</p>"},{"location":"technical/api-reference/#functions","title":"Functions","text":""},{"location":"technical/api-reference/#colorpanegetversion","title":"ColorPane.GetVersion","text":"<pre><code>ColorPane.GetVersion(): (number, number, number)\n</code></pre> <p>Returns the version of ColorPane release, following semantic versioning. This should be used if your applications requires certain versions of ColorPane to function properly.</p>"},{"location":"technical/api-reference/#colorpaneiscoloreditoropen","title":"ColorPane.IsColorEditorOpen","text":"<pre><code>ColorPane.IsColorEditorOpen(): boolean\n</code></pre> <p>Returns whether the color editor is open or not.</p>"},{"location":"technical/api-reference/#colorpaneisgradienteditoropen","title":"ColorPane.IsGradientEditorOpen","text":"<pre><code>ColorPane.IsGradientEditorOpen(): boolean\n</code></pre> <p>Returns whether the gradient editor is open or not.</p>"},{"location":"technical/api-reference/#colorpaneiscolorsequenceeditoropen","title":"ColorPane.IsColorSequenceEditorOpen","text":"<p>Alias for <code>ColorPane.IsGradientEditorOpen</code></p>"},{"location":"technical/api-reference/#colorpanepromptforcolor","title":"ColorPane.PromptForColor","text":"<pre><code>ColorPane.PromptForColor(promptOptions: ColorPromptOptions?): Promise&lt;Color | Color3 | PromptError&gt;\n</code></pre> <p>Prompts the user for a color. Returns a Promise that will resolve with either a Color or Color3, or immediately reject if either the color editor or gradient editor prompts are already open. If the user closes the prompt without submitting a color, the Promise will be cancelled.</p>"},{"location":"technical/api-reference/#colorpanepromptforgradient","title":"ColorPane.PromptForGradient","text":"<pre><code>ColorPane.PromptForGradient(promptOptions: GradientPromptOptions?): Promise&lt;Gradient | ColorSequence | PromptError&gt;\n</code></pre> <p>Prompts the user for a gradient. Returns a Promise that will resolve with either a Gradient or ColorSequence, or immediately reject if the prompt is already open. If the user closes the prompt without submitting a gradient, the Promise will be cancelled.</p>"},{"location":"technical/api-reference/#colorpanepromptforcolorsequence","title":"ColorPane.PromptForColorSequence","text":"<pre><code>ColorPane.PromptForColorSequence(promptOptions: ColorSequencePromptOptions?): Promise&lt;ColorSequence | PromptError&gt;\n</code></pre> <p>Legacy alternative for <code>ColorPane.PromptForGradient</code>. Equivalent to:</p> <pre><code>ColorPane.PromptForGradient({\n    PromptTitle = promptOptions.PromptTitle,\n    GradientType = \"ColorSequence\",\n    InitialGradient = promptOptions.InitialColor,\n    OnGradientChanged = promptOptions.OnColorChanged,\n})\n</code></pre>"},{"location":"technical/api-reference/#events","title":"Events","text":""},{"location":"technical/api-reference/#colorpaneunloading","title":"ColorPane.Unloading","text":"<pre><code>ColorPane.Unloading: Signal\n</code></pre> <p>Fires when the API is unloading. You should use this event to clean up any scripts that use ColorPane.</p>"},{"location":"technical/palette-format/","title":"Palette Format","text":"<p>When importing palettes, they must follow this JSON format:</p> <pre><code>{\n    \"name\": \"Palette Name\",\n\n    \"colors\": [\n        {\n            \"name\": \"Color Name\",\n            \"color\": [0, 0, 0]\n        },\n\n        {\n            \"name\": \"Another Color Name\",\n            \"color\": [0.5, 0.5, 0.5]\n        },\n\n        {\n            \"name\": \"Yet Another Color Name\",\n            \"color\": [1, 1, 1]\n        }\n    ]\n}\n</code></pre> <p>The color array of each color object is a 3-element array representing the RGB channels, which range from [0, 1]. No two colors can share the same name, however any number of colors have have the same color array.</p> <p>If importing from a ModuleScript, the palette can also be a Lua table representation of the above format, i.e.</p> <pre><code>{\n    name = \"Palette Name\",\n\n    colors = {\n        {\n            name = \"Color Name\",\n            color = {0, 0, 0}\n        },\n\n        {\n            name = \"Another Color Name\",\n            color = {0.5, 0.5, 0.5}\n        },\n\n        {\n            name = \"Yet Another Color Name\",\n            color = {1, 1, 1}\n        }\n    }\n}\n</code></pre>"},{"location":"user-guide/color-editor/","title":"Color Editor","text":""},{"location":"user-guide/color-editor/#color-wheel","title":"Color Wheel","text":"<p>The buttons below the wheel let you select color harmonies, which will be marked on the wheel using squares, while the main color marker will be a circle.</p>"},{"location":"user-guide/color-editor/#sliders","title":"Sliders","text":"<p>The editor includes several sliders:</p> <ul> <li>RGB</li> <li>CMYK</li> <li>HSB/L</li> <li>Monochrome</li> <li>Temperature</li> </ul>"},{"location":"user-guide/color-editor/#palettes","title":"Palettes","text":"<p>Palettes let you store lists of colors. For most palettes, you will see (from top to bottom, left to right): a search bar, buttons to switch between grid or list layout, a button to add the current color to the palette, and the list of colors.</p> <p>There are several built-in palettes, some of which have custom layouts:</p> <ul> <li>BrickColors</li> <li>ColorBrewer</li> <li>Copic</li> <li>Picular</li> <li>Web Colors</li> </ul> <p>The overflow menu (the  button) has several options such as creating new palettes, deleting existing palettes, and importing palettes.</p> <p></p>"},{"location":"user-guide/color-editor/#layouts","title":"Layouts","text":"<p>The grid layout (pictured above) is the default layout, and allows for quick access to colors. Clicking on a color will select it, which then allows you to set the current color, remove the color, change its position in the palette, or rename it.</p> <p>The list layout (pictured below) is useful for palettes where color names are important. In this layout, clicking on a color (meaning the box that shows the color) will set the current color, and clicking anywhere else inside the cell will select it.</p> <p></p>"},{"location":"user-guide/color-editor/#import-and-export","title":"Import and Export","text":"<p>Palettes can be imported and exported, for uses such as sharing them with collaborators or backing them up. You can access the import/export options from the overflow menu (the Export option does not appear for built-in palettes).</p> <p>There are various ways to import palettes, but the UI will look similar for each method. After you extract the palette from the method you choose and it's in the correct format, the Import button will be enabled. You can also change the name of the palette before you import it, and the name input will be pre-filled with the name from the palette file/object.</p> <p>Attention</p> <p>When importing via URL, you may be prompted by Studio to allow HTTP requests to the domain of your URL.</p> <p></p> <p>Palettes can be exported as ModuleScripts or StringValues to ServerStorage, and the exported object will contain the JSON string for the palette (as well as some metadata for ModuleScripts).</p> <p>Info</p> <p>Palettes cannot be exported to JSON files, as the Roblox API does not have any functions for this. If you need a JSON file, you can copy the content of the JSON string into a file.</p> <p>For StringValue exports, you can copy the <code>Value</code> property. For ModuleScripts, copy the text inside the double-square-brackets (<code>[[...]]</code>).</p> <p></p>"},{"location":"user-guide/color-editor/#colorbrewer-palette","title":"ColorBrewer Palette","text":"<p>ColorBrewer is a collection of color sets used in cartography. You can select the data type and number of classes, and the palette will display the various color sets that match the criteria.</p>"},{"location":"user-guide/color-editor/#picular-palette","title":"Picular Palette","text":"<p>Picular is an online tool that lets you search \"the color of anything\". You can use the search bar to search for things you want the color of, e.g. \"roblox\". There is also a search history tab where you can view previous entries you have looked up.</p>"},{"location":"user-guide/color-editor/#color-tools","title":"Color Tools","text":"<p>Various color tools are included, such as a color information tool, and a gradient picker.</p>"},{"location":"user-guide/color-editor/#color-info","title":"Color Info","text":"<p>The information tool shows the current color in different representations. You can copy text to paste somewhere else, and paste into the text boxes to change the current color (assuming what you paste follows the same format).</p>"},{"location":"user-guide/color-editor/#color-sorter","title":"Color Sorter","text":"<p>The sorter tool allows you to check how similar a list of colors is to a particular color, where the colors are listed from most to least similar after pressing Sort. The sorter uses CIEDE2000.</p>"},{"location":"user-guide/color-editor/#color-variations","title":"Color Variations","text":"<p>The variations tools shows various tints, tones, shades, and hue rotations of the current color, with an adjuster to change how many colors are shown.</p>"},{"location":"user-guide/color-editor/#gradient-pickers","title":"Gradient Pickers","text":"<p>The gradient pickers allow you to select a color from the different gradients in your gradient palette. Clicking anywhere on a gradient will set the current color to the color at that position. You can also click and drag to select colors as if it were a slider.</p>"},{"location":"user-guide/color-editor/#others","title":"Others","text":"<p>The two colors in a large square at the bottom-left of the editor represent the current (top) and initial (bottom) colors. You can click on the initial color if you want to reset the current color. The hex input below it accepts either 3 (<code>ABC</code> = <code>AABBCC</code>) or 6 (<code>ABCDEF</code>) digits.</p> <p>The quick palette to the right of the large square lets you temporarily store colors for quick access. You can add as many colors as you like, but you can't remove any colors. The number of colors that the quick palette displays depends on the size of the window (i.e. a larger window displays more colors).</p>"},{"location":"user-guide/color-properties/","title":"Color Properties","text":"<p>The Color Properties window allows you to edit the color properties of objects in your projects.</p> <p></p> <p>Each property will have a little icon next to its color button to indicate the type of property it is ( for BrickColors,  for Color3s, and  for ColorSequences). When multiple properties with the same name are listed, their class names will also be listed. Clicking on the color button will allow you to edit the property's value.</p> <p>The Terrain material properties you will see when you select a Terrain object (e.g. \"Asphalt Material\", \"Basalt Material\", etc.) are not real properties. You can still use these fake properties to modify material colors, however. (These fake properties were created because the actual property that they belong to, <code>Terrain.MaterialColors</code> is not accessible to scripts.)</p>"},{"location":"user-guide/color-properties/#activation","title":"Activation","text":"<p>Color Properties will require manual activation the first time you use it. You will see a prompt when you open the window telling you that the API data has not been loaded (pictured below). On this screen you can load the API data and change the settings for automatic activation and caching (see the next section).</p> <p>Attention</p> <p>API data is retrieved via HTTP requests to <code>setup.rbxcdn.com</code>. You will be prompted by Studio to allow HTTP requests to this domain the first time you use Color Properties. If you deny this permission, you will not be able to use Color Properties.</p> <p>Info</p> <p>The Roblox API data necessary for Color Properties and the ColorPane API are not related, and you do not need to inject the ColorPane API to use Color Properties.</p> <p></p>"},{"location":"user-guide/color-properties/#usage-during-testing","title":"Usage During Testing","text":"<p>Since HTTP requests are not allowed from plugins during testing, trying to use Color Properties won't work. You can enable the Cache Roblox API data setting to get around this, which will store the Roblox API data on your computer so that it can be used instead of having to make an HTTP request. Enabling this option may cause noticable pauses whenever the cache needs to be updated, since the size of the API data is quite large.</p>"},{"location":"user-guide/gradient-editor/","title":"Gradient Editor","text":""},{"location":"user-guide/gradient-editor/#editing-keypoints","title":"Editing Keypoints","text":"<p>Keypoints can be added by clicking anywhere in the gradient view (as long as the cursor isn't snapped to another keypoint). Clicking on a keypoint will select it, which allows you to delete it, change its color or position, and use the left or right buttons (not the arrow keys) to swap its color with the keypoint on the left or right, respectively. You can also change the position by dragging it around the gradient view.</p>"},{"location":"user-guide/gradient-editor/#other-controls","title":"Other Controls","text":"<ul> <li>The  button reverses the order of the colors in the gradient</li> <li>The Snap input can be used to modify the interval at which keypoints snap</li> <li>The Reset button resets the gradient to its initial value</li> </ul> <p>The  button toggles showing the ColorSequence code for the gradient, if you wish to copy it. You'll probably have to increase the size of the window to view the whole code.</p> <p></p>"},{"location":"user-guide/gradient-editor/#gradient-palette","title":"Gradient Palette","text":"<p>You can open the gradient palette using the  button. Similar to color palettes, you can store gradients for later use. Unlike the color palettes, however, there is only one palette, and you cannot import/export the palette. The first 3 gradients in the palette are built-in, so you cannot modify or delete them.</p>"},{"location":"user-guide/gradient-editor/#gradient-info","title":"Gradient Info","text":"<p>You can access gradient info with the  button. Editing gradient information is an advanced feature that allows you to create gradients with interpolation in different color spaces. The available options for the color space and hue interpolation are the same as those used in Color.mix.</p> <p>Increasing precision allows you to get a more visually-accurate gradient for the specified color space, but at the cost of the number of keypoints that you're allowed to insert.</p> <p>For non-RGB color spaces, the precision should be at least 1, otherwise the gradient will not look any different from itself in RGB space. For RGB space, the precision should always be 0, since ColorSequences already use RGB interpolation.</p>"},{"location":"user-guide/tips/","title":"Tips and Tricks","text":""},{"location":"user-guide/tips/#color-editor","title":"Color Editor","text":""},{"location":"user-guide/tips/#page-pickers","title":"Page Pickers","text":"<ul> <li>On the Slider and Palette sections, you can use the scroll wheel on the dropdown button to quickly switch between pages.</li> </ul>"},{"location":"user-guide/tips/#palettes","title":"Palettes","text":"<ul> <li>If you have a color selected, you can use the arrow keys to select a different color, and you can hold down the key to select faster.</li> <li>You can skip the confirmation screen to delete a palette if you hold down the Shift key before you use the delete option.</li> <li>If you prefer to name palettes after you create them, there is an option in the Settings that lets you create palettes without naming them. They will have the default name New Palette.</li> </ul>"},{"location":"user-guide/tips/#gradient-editor","title":"Gradient Editor","text":"<ul> <li>If you have a keypoint selected, you can use the left and right arrow keys to select a different keypoint.</li> <li>You can right-click on a keypoint to delete it instead of having to use the delete button.</li> </ul>"},{"location":"user-guide/tips/#resetting-session-locks","title":"Resetting Session Locks","text":"<p>ColorPane uses session locks to prevent multiple sessions trying to write settings at the same time. If ColorPane errors or for some reason cannot clear the session lock, you will receive a message to close other sessions even though you don't have any other sessions open. To fix this, simply use the Claim Session Lock button in the Settings.</p>"}]}